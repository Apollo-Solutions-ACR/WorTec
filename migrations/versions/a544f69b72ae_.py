"""empty message

Revision ID: a544f69b72ae
Revises: 
Create Date: 2024-10-25 00:51:40.716999

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a544f69b72ae'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('educationalInstitution',
    sa.Column('idInstitution', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('institutionName', sa.String(length=150), nullable=False),
    sa.Column('institutionCountry', sa.String(length=50), nullable=False),
    sa.Column('countryState', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('institutionPhone', sa.String(length=50), nullable=False),
    sa.Column('contactPerson', sa.String(length=100), nullable=False),
    sa.Column('contactPhone', sa.String(length=50), nullable=False),
    sa.Column('institutionEmail', sa.String(length=100), nullable=False),
    sa.Column('websiteUrl', sa.String(length=100), nullable=True),
    sa.Column('accountingService', sa.Boolean(), nullable=False),
    sa.Column('logo', sa.String(), nullable=True),
    sa.Column('slogan', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'DEPRECATED', name='institution_status_enum'), nullable=False),
    sa.Column('typeEvaluationPeriod', sa.Enum('QUARTERLY', 'SEMESTER', 'TRIMESTER', 'ANNUAL', name='evaluation_period_type_enum'), nullable=False),
    sa.Column('firstPeriodDate', sa.Date(), nullable=False),
    sa.Column('secondPeriodDate', sa.Date(), nullable=True),
    sa.Column('thirdPeriodDate', sa.Date(), nullable=True),
    sa.Column('fourthPeriodDate', sa.Date(), nullable=True),
    sa.Column('firstPeriodPercentage', sa.Float(), nullable=False),
    sa.Column('secondPeriodPercentage', sa.Float(), nullable=False),
    sa.Column('thirdPeriodPercentage', sa.Float(), nullable=False),
    sa.Column('fourthPeriodPercentage', sa.Float(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('idInstitution'),
    sa.UniqueConstraint('idInstitution'),
    sa.UniqueConstraint('institutionEmail')
    )
    op.create_table('token_blocked_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=1000), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('classLevel',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('section', sa.String(length=4), nullable=True),
    sa.Column('institutionId', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['institutionId'], ['educationalInstitution.idInstitution'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('institutionMembership',
    sa.Column('idMembership', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('institutionId', sa.Integer(), nullable=False),
    sa.Column('membershipName', sa.String(length=100), nullable=False),
    sa.Column('membershipType', sa.Enum('BASIC', 'ESTANDARD_X_STUDENTS', 'ESTANDARD_PLAN', 'PREMIUM_X_STUDENT', 'PREMIUM_PLAN', 'GOLD_X_STUDENT', 'GOLD_PLAN', name='membership_type_enum'), nullable=False),
    sa.Column('paymentDay', sa.Date(), nullable=False),
    sa.Column('startDate', sa.Date(), nullable=False),
    sa.Column('endDate', sa.Date(), nullable=False),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('billingFrequency', sa.Enum('MONTHLY', 'PERIODIC', 'SEMESTER', 'ANNUAL', name='billing_frequency_enum'), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['institutionId'], ['educationalInstitution.idInstitution'], ),
    sa.PrimaryKeyConstraint('idMembership'),
    sa.UniqueConstraint('idMembership')
    )
    op.create_table('subject',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('institutionId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['institutionId'], ['educationalInstitution.idInstitution'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('institutionId', sa.Integer(), nullable=True),
    sa.Column('role', sa.Enum('STUDENT', 'TEACHER', 'EDUADMIN', 'INSTITUTION', 'PARENT', 'SERVICE', 'DEV', name='user_role_enum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'DEPRECIATED', 'GRADUATED', name='user_status_enum'), nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('firstLastname', sa.String(length=50), nullable=False),
    sa.Column('secondLastname', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=400), nullable=False),
    sa.Column('temporaryPassword', sa.Boolean(), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('principalPhone', sa.String(length=30), nullable=False),
    sa.Column('secondPhone', sa.String(length=30), nullable=True),
    sa.Column('profilePicture', sa.String(length=1000), nullable=True),
    sa.Column('userPosition', sa.String(length=100), nullable=True),
    sa.Column('details', sa.String(length=250), nullable=True),
    sa.Column('country', sa.String(length=70), nullable=False),
    sa.Column('dni', sa.String(length=20), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['institutionId'], ['educationalInstitution.idInstitution'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('levelSubject',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('classLevelId', sa.Integer(), nullable=False),
    sa.Column('subjectId', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['classLevelId'], ['classLevel.id'], ),
    sa.ForeignKeyConstraint(['subjectId'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('relatedClassLevel',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('classLevelId', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'REJECTED', name='related_class_level_status_enum'), nullable=False),
    sa.ForeignKeyConstraint(['classLevelId'], ['classLevel.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studentParent',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('studentId', sa.Integer(), nullable=False),
    sa.Column('parentId', sa.Integer(), nullable=False),
    sa.Column('relationType', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['parentId'], ['user.id'], ),
    sa.ForeignKeyConstraint(['studentId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teacherSyllabus',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=150), nullable=True),
    sa.Column('teacherId', sa.Integer(), nullable=False),
    sa.Column('isDraft', sa.Boolean(), nullable=True),
    sa.Column('isPublic', sa.Boolean(), nullable=True),
    sa.Column('isGlobal', sa.Boolean(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['teacherId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('subjectAssignment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('comment', sa.String(length=100), nullable=True),
    sa.Column('levelSubjectId', sa.Integer(), nullable=False),
    sa.Column('teacherId', sa.Integer(), nullable=True),
    sa.Column('startDate', sa.Date(), nullable=True),
    sa.Column('endDate', sa.Date(), nullable=True),
    sa.Column('institutionId', sa.Integer(), nullable=False),
    sa.Column('syllabusId', sa.Integer(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['institutionId'], ['educationalInstitution.idInstitution'], ),
    sa.ForeignKeyConstraint(['levelSubjectId'], ['levelSubject.id'], ),
    sa.ForeignKeyConstraint(['syllabusId'], ['teacherSyllabus.id'], ),
    sa.ForeignKeyConstraint(['teacherId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('unit',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('teacherSyllabusId', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['teacherSyllabusId'], ['teacherSyllabus.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('topic',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unitId', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['unitId'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('topic')
    op.drop_table('unit')
    op.drop_table('subjectAssignment')
    op.drop_table('teacherSyllabus')
    op.drop_table('studentParent')
    op.drop_table('relatedClassLevel')
    op.drop_table('levelSubject')
    op.drop_table('user')
    op.drop_table('subject')
    op.drop_table('institutionMembership')
    op.drop_table('classLevel')
    op.drop_table('token_blocked_list')
    op.drop_table('educationalInstitution')
    # ### end Alembic commands ###
